{"version":3,"sources":["Components/Element.js","Components/Nav.js","Components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["Element","props","id","value","onClick","className","src","alt","Nav","Props","button","lost","reset","class","highScore","score","Wrapper","state","elements","img","clickedElements","handleOnClick","event","target","forEach","element","setState","shuffle","push","a","i","length","j","Math","floor","random","page","this","map","result","style","height","width","key","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13ffce67.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction Element(props) {\r\n  return (\r\n    <img \r\n      id={props.id}\r\n      value={props.value}\r\n      onClick={props.onClick}\r\n      className=\"img-thumbnail float-left  img-fluid w-100 h-100 \"\r\n      src={props.value}\r\n      alt=\"\"\r\n    ></img>\r\n  );\r\n}\r\nexport default Element;\r\n","import React from \"react\";\r\n// const [state , setState] = useState();\r\nfunction Nav(Props) {\r\n  let button;\r\n  if (Props.lost) {\r\n    button = (\r\n      <button className=\"btn btn-danger\" onClick={Props.reset}>\r\n        Rest Game\r\n      </button>\r\n    );\r\n  }\r\n  return (\r\n    <nav class=\"navbar navbar-inverse\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n          <span class=\"navbar-brand\" >\r\n            Clicky Game\r\n          </span>\r\n        </div>\r\n        <ul class=\"nav navbar-nav navbar-left\"> {button}</ul>\r\n\r\n        <ul class=\"nav navbar-nav navbar-right\">\r\n          <li>High Score : {Props.highScore}</li>\r\n          <li>Score: {Props.score}</li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport Element from \"./Element\";\r\nimport Nav from \"./Nav\";\r\n\r\nclass Wrapper extends Component {\r\n  // Setting the component's initial state\r\n  state = {\r\n    elements: [\r\n      { img: \"./img/00.png\", id: \"a\" },\r\n      { img: \"./img/01.jpg\", id: \"b\" },\r\n      { img: \"./img/02.jpg\", id: \"c\" },\r\n      { img: \"./img/03.jpg\", id: \"d\" },\r\n      { img: \"./img/04.jpg\", id: \"e\" },\r\n      { img: \"./img/05.jpg\", id: \"f\" },\r\n      { img: \"./img/06.jpg\", id: \"g\" },\r\n      { img: \"./img/07.jpg\", id: \"h\" },\r\n      { img: \"./img/08.jpg\", id: \"i\" },\r\n      { img: \"./img/09.jpg\", id: \"j\" },\r\n      { img: \"./img/10.png\", id: \"k\" },\r\n      { img: \"./img/11.jpg\", id: \"l\" }\r\n    ],\r\n    clickedElements: [],\r\n    score: 0,\r\n    highScore: 0,\r\n    lost: false\r\n  };\r\n  handleOnClick = event => {\r\n    //   console.log(\"hello\")\r\n\r\n    // Getting the value and name of the input which triggered the change\r\n    const { id } = event.target;\r\n    this.state.clickedElements.forEach(element => {\r\n      if (id === element.id) {\r\n        this.setState({ lost: true });\r\n      }\r\n    });\r\n\r\n    if (!this.state.lost) {\r\n      this.setState({ score: this.state.score + 1 });\r\n\r\n      this.shuffle();\r\n      this.state.clickedElements.push({ id: id });\r\n    }\r\n  };\r\n  shuffle = () => {\r\n    const a = this.state.elements;\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return this.setState(a);\r\n  };\r\n\r\n  reset = () => {\r\n    if (this.state.highScore < this.state.score) {\r\n      this.setState({ highScore: this.state.score });\r\n    }\r\n    this.setState({\r\n      elements: [\r\n        { img: \"./img/00.png\", id: \"a\" },\r\n        { img: \"./img/01.jpg\", id: \"b\" },\r\n        { img: \"./img/02.jpg\", id: \"c\" },\r\n        { img: \"./img/03.jpg\", id: \"d\" },\r\n        { img: \"./img/04.jpg\", id: \"e\" },\r\n        { img: \"./img/05.jpg\", id: \"f\" },\r\n        { img: \"./img/06.jpg\", id: \"g\" },\r\n        { img: \"./img/07.jpg\", id: \"h\" },\r\n        { img: \"./img/08.jpg\", id: \"i\" },\r\n        { img: \"./img/09.jpg\", id: \"j\" },\r\n        { img: \"./img/10.png\", id: \"k\" },\r\n        { img: \"./img/11.jpg\", id: \"l\" }\r\n      ],\r\n      clickedElements: [],\r\n      score: 0,\r\n      lost: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let page;\r\n    if (this.state.lost) {\r\n      page = (\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">Score : {this.state.score}</div>\r\n\r\n          <div class=\"card-header\">High Score : {this.state.highScore}</div>\r\n          <div class=\"card-body\">\r\n            <button className=\"btn btn-danger\" onClick={this.reset}>\r\n              Rest Game\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      page = this.state.elements.map(result => (\r\n        <div style={{ height: \"300px\", width: \"25%\" }} key={result.id}>\r\n          <Element\r\n            value={result.img}\r\n            id={result.id}\r\n            onClick={this.handleOnClick}\r\n          />\r\n        </div>\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div className=\"row w-100 justify-content-center\">\r\n        <div className=\"row w-100 justify-content-center\">\r\n          <div className=\"col-12\">\r\n            <Nav\r\n              lost={this.state.lost}\r\n              reset={this.reset}\r\n              highScore={this.state.highScore}\r\n              score={this.state.score}\r\n            />\r\n          </div>\r\n          {page}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Wrapper from \"./Components/Wrapper\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container-fluid\">\n \n       <Wrapper/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}